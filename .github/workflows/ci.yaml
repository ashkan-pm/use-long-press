name: CI
on:
  pull_request:
    branches:
      - master
jobs:
  dependencies:
    name: Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      # Cache node_modules
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node-modules-cache-${{ hashFiles('./yarn.lock') }}
      # Install yarn dependencies
      - name: Install yarn dependencies
        run: yarn install
  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: dependencies
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      # Restore node_modules
      - name: Restore node_modules
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node-modules-cache-${{ hashFiles('./yarn.lock') }}
      # Lint
      - name: Lint
        run: yarn lint
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: dependencies
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      # Restore node_modules
      - name: Restore node_modules
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node-modules-cache-${{ hashFiles('./yarn.lock') }}
      # Test
      - name: Test
        run: yarn test:cov
      # Upload coverage
      - name: Upload coverage
        run: yarn codecov --token=${{ secrets.CODECOV_TOKEN }}
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: dependencies
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      # Restore node_modules
      - name: Restore node_modules
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node-modules-cache-${{ hashFiles('./yarn.lock') }}
      # Build
      - name: Build
        run: yarn build
